[project]
name = "fishsense-data-processing-workflow-worker"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "dynaconf>=3.2.11",
    "platformdirs>=4.3.8",
    "pydantic>=2.11.9",
    "scikit-learn",
    "sqlmodel>=0.0.25",
    "temporalio>=1.17.0",
    "validators>=0.35.0",
]

[project.scripts]
fishsense_data_processing_workflow_worker = "fishsense_data_processing_workflow_worker.worker:run"

[tool.semantic_release]
version_variables = ["src/fishsense_data_processing_workflow_worker/__init__.py:__version__"]
version_toml = [
    "pyproject.toml:project.version",
]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[build-system]
requires = ["uv_build>=0.8.12,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "ipykernel>=6.30.1",
    "ipywidgets>=8.1.7",
    "pylint>=3.3.8",
]
hack = [
    "asyncpg>=0.30.0",
    "label-studio-sdk>=2.0.7",
    "matplotlib>=3.10.6",
    "opencv-contrib-python>=4.12.0.88",
    "opencv-python>=4.12.0.88",
    "rawpy>=0.25.1",
    "scikit-image>=0.25.2",
]
